
[cgome032]_lab[2]_part[3].elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000162  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000010e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000162  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000194  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000001d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008c1  00000000  00000000  00000204  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007c8  00000000  00000000  00000ac5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002bf  00000000  00000000  0000128d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  0000154c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000419  00000000  00000000  00001590  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000af  00000000  00000000  000019a9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001a58  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	37 c0       	rjmp	.+110    	; 0x10a <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:
}


int main(void)
{
	DDRA = 0x00; PORTA = 0xFF; // Configure port A's 8 pins as inputs
  9e:	11 b8       	out	0x01, r1	; 1
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	82 b9       	out	0x02, r24	; 2
	DDRC = 0xFF; PORTC = 0x00; // Configure port C's 8 pins as outputs
  a4:	87 b9       	out	0x07, r24	; 7
  a6:	18 b8       	out	0x08, r1	; 8
	unsigned char tmpC = 0x00; // intermediate variable used for port updates
	unsigned char tmpAB = 0x00; // intermediate variable used for other port updates
	while (1) 
    {
		tmpC = 0x00;
		tmpA = PINA & 0x0F;
  a8:	80 b1       	in	r24, 0x00	; 0
  aa:	8f 70       	andi	r24, 0x0F	; 15
		tmpAB = PINA & 0x70;
  ac:	90 b1       	in	r25, 0x00	; 0
  ae:	90 77       	andi	r25, 0x70	; 112

		if(tmpA == 1 || tmpA == 2){
  b0:	2f ef       	ldi	r18, 0xFF	; 255
  b2:	28 0f       	add	r18, r24
  b4:	22 30       	cpi	r18, 0x02	; 2
  b6:	b0 f0       	brcs	.+44     	; 0xe4 <main+0x46>
			tmpC = 0x20;
		}

		else if(tmpA == 3 || tmpA == 4){
  b8:	2d ef       	ldi	r18, 0xFD	; 253
  ba:	28 0f       	add	r18, r24
  bc:	22 30       	cpi	r18, 0x02	; 2
  be:	a0 f0       	brcs	.+40     	; 0xe8 <main+0x4a>
			tmpC = 0x30;
		}

		else if(tmpA == 5 || tmpA == 6){
  c0:	2b ef       	ldi	r18, 0xFB	; 251
  c2:	28 0f       	add	r18, r24
  c4:	22 30       	cpi	r18, 0x02	; 2
  c6:	90 f0       	brcs	.+36     	; 0xec <main+0x4e>
			tmpC = 0x38;
		}

		else if(tmpA == 7 || tmpA == 8 || tmpA == 9){
  c8:	29 ef       	ldi	r18, 0xF9	; 249
  ca:	28 0f       	add	r18, r24
  cc:	23 30       	cpi	r18, 0x03	; 3
  ce:	80 f0       	brcs	.+32     	; 0xf0 <main+0x52>
			tmpC = 0x3C;
		}

		else if( tmpA == 10 || tmpA == 11 || tmpA == 12){
  d0:	26 ef       	ldi	r18, 0xF6	; 246
  d2:	28 0f       	add	r18, r24
  d4:	23 30       	cpi	r18, 0x03	; 3
  d6:	70 f0       	brcs	.+28     	; 0xf4 <main+0x56>
			tmpC = 0x3E;
		}

		else if(tmpA == 13 || tmpA == 14 || tmpA == 15){
  d8:	23 ef       	ldi	r18, 0xF3	; 243
  da:	28 0f       	add	r18, r24
  dc:	23 30       	cpi	r18, 0x03	; 3
  de:	60 f0       	brcs	.+24     	; 0xf8 <main+0x5a>
			tmpC = 0x3F;
		}
		else{
			tmpC = 0;
  e0:	20 e0       	ldi	r18, 0x00	; 0
  e2:	0b c0       	rjmp	.+22     	; 0xfa <main+0x5c>
		tmpC = 0x00;
		tmpA = PINA & 0x0F;
		tmpAB = PINA & 0x70;

		if(tmpA == 1 || tmpA == 2){
			tmpC = 0x20;
  e4:	20 e2       	ldi	r18, 0x20	; 32
  e6:	09 c0       	rjmp	.+18     	; 0xfa <main+0x5c>
		}

		else if(tmpA == 3 || tmpA == 4){
			tmpC = 0x30;
  e8:	20 e3       	ldi	r18, 0x30	; 48
  ea:	07 c0       	rjmp	.+14     	; 0xfa <main+0x5c>
		}

		else if(tmpA == 5 || tmpA == 6){
			tmpC = 0x38;
  ec:	28 e3       	ldi	r18, 0x38	; 56
  ee:	05 c0       	rjmp	.+10     	; 0xfa <main+0x5c>
		}

		else if(tmpA == 7 || tmpA == 8 || tmpA == 9){
			tmpC = 0x3C;
  f0:	2c e3       	ldi	r18, 0x3C	; 60
  f2:	03 c0       	rjmp	.+6      	; 0xfa <main+0x5c>
		}

		else if( tmpA == 10 || tmpA == 11 || tmpA == 12){
			tmpC = 0x3E;
  f4:	2e e3       	ldi	r18, 0x3E	; 62
  f6:	01 c0       	rjmp	.+2      	; 0xfa <main+0x5c>
		}

		else if(tmpA == 13 || tmpA == 14 || tmpA == 15){
			tmpC = 0x3F;
  f8:	2f e3       	ldi	r18, 0x3F	; 63
		}
		else{
			tmpC = 0;
		}

		if(tmpA <= 4){
  fa:	85 30       	cpi	r24, 0x05	; 5
  fc:	08 f4       	brcc	.+2      	; 0x100 <main+0x62>
			tmpC = tmpC | 0x40;
  fe:	20 64       	ori	r18, 0x40	; 64
		}
		tmpAB = tmpAB >> 4;

		if(tmpAB == 3){
 100:	90 33       	cpi	r25, 0x30	; 48
 102:	09 f4       	brne	.+2      	; 0x106 <main+0x68>
			tmpC = tmpC | 0x80;
 104:	20 68       	ori	r18, 0x80	; 128

		}

		PORTC = tmpC;
 106:	28 b9       	out	0x08, r18	; 8
	}
 108:	cf cf       	rjmp	.-98     	; 0xa8 <main+0xa>

0000010a <_exit>:
 10a:	f8 94       	cli

0000010c <__stop_program>:
 10c:	ff cf       	rjmp	.-2      	; 0x10c <__stop_program>
