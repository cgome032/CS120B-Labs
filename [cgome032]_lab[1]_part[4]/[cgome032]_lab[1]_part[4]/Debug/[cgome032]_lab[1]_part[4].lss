
[cgome032]_lab[1]_part[4].elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000014e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000fa  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000014e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000180  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000866  00000000  00000000  000001e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000078e  00000000  00000000  00000a46  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000023d  00000000  00000000  000011d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001414  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000419  00000000  00000000  00001438  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000a1  00000000  00000000  00001851  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000018f2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	2d c0       	rjmp	.+90     	; 0xf6 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:
#include <stdlib.h>


int main(void)
{
	DDRA = 0x00; PORTA = 0xFF; // Configure port A's 8 pins as inputs
  9e:	11 b8       	out	0x01, r1	; 1
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	82 b9       	out	0x02, r24	; 2
	DDRB = 0x00; PORTB = 0x00; // Configure port B's 8 pins as inputs,
  a4:	14 b8       	out	0x04, r1	; 4
  a6:	15 b8       	out	0x05, r1	; 5
	DDRC = 0x00; PORTC = 0x00; // Configure port C's 8 pins as inputs,
  a8:	17 b8       	out	0x07, r1	; 7
  aa:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xFF; PORTD = 0x00; // Configure port D's 8 pins as outputs,
  ac:	8a b9       	out	0x0a, r24	; 10
  ae:	1b b8       	out	0x0b, r1	; 11


    while (1) 
    {
		// 1) Read input
		tmpA = PINA;
  b0:	80 b1       	in	r24, 0x00	; 0
		tmpB = PINB;
  b2:	33 b1       	in	r19, 0x03	; 3
		tmpC = PINC;
  b4:	46 b1       	in	r20, 0x06	; 6
		totWeight = tmpA + tmpB + tmpC;
  b6:	28 2f       	mov	r18, r24
  b8:	23 0f       	add	r18, r19
  ba:	24 0f       	add	r18, r20
		tmpD = 0x00;
		//totWeight = totWeight<<2;


		if(tmpA+tmpB+tmpC>= 140){
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	50 e0       	ldi	r21, 0x00	; 0
		// 1) Read input
		tmpA = PINA;
		tmpB = PINB;
		tmpC = PINC;
		totWeight = tmpA + tmpB + tmpC;
		tmpD = 0x00;
  c0:	bc 01       	movw	r22, r24
  c2:	63 0f       	add	r22, r19
  c4:	71 1d       	adc	r23, r1
  c6:	64 0f       	add	r22, r20
  c8:	75 1f       	adc	r23, r21
  ca:	31 e0       	ldi	r19, 0x01	; 1
  cc:	6c 38       	cpi	r22, 0x8C	; 140
  ce:	71 05       	cpc	r23, r1
  d0:	0c f4       	brge	.+2      	; 0xd4 <main+0x36>
  d2:	30 e0       	ldi	r19, 0x00	; 0


		if(tmpA+tmpB+tmpC>= 140){
			tmpD = tmpD | 0x01;
		}
		if(abs(tmpA-tmpC) > 80){
  d4:	84 1b       	sub	r24, r20
  d6:	95 0b       	sbc	r25, r21
  d8:	ac 01       	movw	r20, r24
  da:	22 f4       	brpl	.+8      	; 0xe4 <main+0x46>
  dc:	44 27       	eor	r20, r20
  de:	55 27       	eor	r21, r21
  e0:	48 1b       	sub	r20, r24
  e2:	59 0b       	sbc	r21, r25
  e4:	41 35       	cpi	r20, 0x51	; 81
  e6:	51 05       	cpc	r21, r1
  e8:	0c f0       	brlt	.+2      	; 0xec <main+0x4e>
			tmpD = tmpD | 0x02;
  ea:	32 60       	ori	r19, 0x02	; 2
		}

		totWeight = totWeight & 0xFC;

		tmpD = totWeight + tmpD;
  ec:	82 2f       	mov	r24, r18
  ee:	8c 7f       	andi	r24, 0xFC	; 252
  f0:	83 0f       	add	r24, r19


		PORTD = tmpD;
  f2:	8b b9       	out	0x0b, r24	; 11
	}
  f4:	dd cf       	rjmp	.-70     	; 0xb0 <main+0x12>

000000f6 <_exit>:
  f6:	f8 94       	cli

000000f8 <__stop_program>:
  f8:	ff cf       	rjmp	.-2      	; 0xf8 <__stop_program>
