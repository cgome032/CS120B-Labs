
[cgome032]_lab[3]_part[2].elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000264  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001f0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000264  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000264  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000294  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000002d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008ba  00000000  00000000  000002fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007d6  00000000  00000000  00000bb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000344  00000000  00000000  0000138c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  000016d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000043e  00000000  00000000  00001704  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001b42  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a4 30       	cpi	r26, 0x04	; 4
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	92 d0       	rcall	.+292    	; 0x1ce <main>
  aa:	a0 c0       	rjmp	.+320    	; 0x1ec <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <button_Tick>:

unsigned char tmpC;


void button_Tick(){
	button0 = PINA & 0x01;
  ae:	90 b1       	in	r25, 0x00	; 0
  b0:	91 70       	andi	r25, 0x01	; 1
  b2:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <button0>
	button1 = PINA & 0x02;
  b6:	20 b1       	in	r18, 0x00	; 0
  b8:	22 70       	andi	r18, 0x02	; 2
  ba:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <button1>
		
	switch(state){ // Transitions
  be:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  c2:	82 30       	cpi	r24, 0x02	; 2
  c4:	71 f1       	breq	.+92     	; 0x122 <button_Tick+0x74>
  c6:	28 f4       	brcc	.+10     	; 0xd2 <button_Tick+0x24>
  c8:	88 23       	and	r24, r24
  ca:	59 f0       	breq	.+22     	; 0xe2 <button_Tick+0x34>
  cc:	81 30       	cpi	r24, 0x01	; 1
  ce:	e9 f0       	breq	.+58     	; 0x10a <button_Tick+0x5c>
  d0:	65 c0       	rjmp	.+202    	; 0x19c <button_Tick+0xee>
  d2:	84 30       	cpi	r24, 0x04	; 4
  d4:	09 f4       	brne	.+2      	; 0xd8 <button_Tick+0x2a>
  d6:	42 c0       	rjmp	.+132    	; 0x15c <button_Tick+0xae>
  d8:	80 f1       	brcs	.+96     	; 0x13a <button_Tick+0x8c>
  da:	85 30       	cpi	r24, 0x05	; 5
  dc:	09 f4       	brne	.+2      	; 0xe0 <button_Tick+0x32>
  de:	50 c0       	rjmp	.+160    	; 0x180 <button_Tick+0xd2>
  e0:	5d c0       	rjmp	.+186    	; 0x19c <button_Tick+0xee>
		case init:
			if(!button0 && !button1){
  e2:	91 11       	cpse	r25, r1
  e4:	04 c0       	rjmp	.+8      	; 0xee <button_Tick+0x40>
  e6:	22 23       	and	r18, r18
  e8:	09 f4       	brne	.+2      	; 0xec <button_Tick+0x3e>
  ea:	70 c0       	rjmp	.+224    	; 0x1cc <button_Tick+0x11e>
  ec:	06 c0       	rjmp	.+12     	; 0xfa <button_Tick+0x4c>
				state = init;
			}
			else if(button0 && !button1){
  ee:	21 11       	cpse	r18, r1
  f0:	08 c0       	rjmp	.+16     	; 0x102 <button_Tick+0x54>
				state = inc;
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
  f8:	57 c0       	rjmp	.+174    	; 0x1a8 <button_Tick+0xfa>
			}
			else if(!button0 && button1){
				state = dec;
  fa:	82 e0       	ldi	r24, 0x02	; 2
  fc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 100:	5b c0       	rjmp	.+182    	; 0x1b8 <button_Tick+0x10a>
			}
			else if(button0 && button1){
				state = zero;
 102:	83 e0       	ldi	r24, 0x03	; 3
 104:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 108:	5f c0       	rjmp	.+190    	; 0x1c8 <button_Tick+0x11a>
			}
			break;
		case inc:
			if(button0 && button1){
 10a:	99 23       	and	r25, r25
 10c:	31 f0       	breq	.+12     	; 0x11a <button_Tick+0x6c>
 10e:	22 23       	and	r18, r18
 110:	21 f0       	breq	.+8      	; 0x11a <button_Tick+0x6c>
				state = zero;
 112:	83 e0       	ldi	r24, 0x03	; 3
 114:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 118:	57 c0       	rjmp	.+174    	; 0x1c8 <button_Tick+0x11a>
			}
			else{
				state = wait2;
 11a:	85 e0       	ldi	r24, 0x05	; 5
 11c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 120:	08 95       	ret
			}
			break;
		case dec:
			if(button0 && button1){
 122:	99 23       	and	r25, r25
 124:	31 f0       	breq	.+12     	; 0x132 <button_Tick+0x84>
 126:	22 23       	and	r18, r18
 128:	21 f0       	breq	.+8      	; 0x132 <button_Tick+0x84>
				state = zero;
 12a:	83 e0       	ldi	r24, 0x03	; 3
 12c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 130:	4b c0       	rjmp	.+150    	; 0x1c8 <button_Tick+0x11a>
			}
			else{
				state = wait2;
 132:	85 e0       	ldi	r24, 0x05	; 5
 134:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 138:	08 95       	ret
			}
			break;
		case zero:
			if(!button0 && !button1){
 13a:	91 11       	cpse	r25, r1
 13c:	05 c0       	rjmp	.+10     	; 0x148 <button_Tick+0x9a>
 13e:	21 11       	cpse	r18, r1
 140:	09 c0       	rjmp	.+18     	; 0x154 <button_Tick+0xa6>
				state = init;
 142:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
 146:	08 95       	ret
			}
			else if (button0 && !button1){
 148:	21 11       	cpse	r18, r1
 14a:	3e c0       	rjmp	.+124    	; 0x1c8 <button_Tick+0x11a>
				state = inc;
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 152:	2a c0       	rjmp	.+84     	; 0x1a8 <button_Tick+0xfa>
			}
			else if(!button0 && button1){
				state = dec;
 154:	82 e0       	ldi	r24, 0x02	; 2
 156:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 15a:	2e c0       	rjmp	.+92     	; 0x1b8 <button_Tick+0x10a>
			else if(button0 && button1){
				state = zero;
			}
			break;
		case wait:
			if(button0 && button1){
 15c:	99 23       	and	r25, r25
 15e:	51 f0       	breq	.+20     	; 0x174 <button_Tick+0xc6>
 160:	22 23       	and	r18, r18
 162:	21 f0       	breq	.+8      	; 0x16c <button_Tick+0xbe>
				state = zero;
 164:	83 e0       	ldi	r24, 0x03	; 3
 166:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 16a:	2e c0       	rjmp	.+92     	; 0x1c8 <button_Tick+0x11a>
			}
			else if(button0 && !button1){
				state = inc;
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 172:	1a c0       	rjmp	.+52     	; 0x1a8 <button_Tick+0xfa>
			}
			else if(!button0 && button1){
 174:	22 23       	and	r18, r18
 176:	51 f1       	breq	.+84     	; 0x1cc <button_Tick+0x11e>
				state = dec;
 178:	82 e0       	ldi	r24, 0x02	; 2
 17a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 17e:	1c c0       	rjmp	.+56     	; 0x1b8 <button_Tick+0x10a>
			else{
				state = wait;
			}
			break;
		case wait2:
			if(!button0 && !button1){
 180:	91 11       	cpse	r25, r1
 182:	06 c0       	rjmp	.+12     	; 0x190 <button_Tick+0xe2>
 184:	21 11       	cpse	r18, r1
 186:	22 c0       	rjmp	.+68     	; 0x1cc <button_Tick+0x11e>
				state = wait;
 188:	84 e0       	ldi	r24, 0x04	; 4
 18a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 18e:	08 95       	ret
			}
			else if(button0 && button1){
 190:	22 23       	and	r18, r18
 192:	e1 f0       	breq	.+56     	; 0x1cc <button_Tick+0x11e>
				state = zero;
 194:	83 e0       	ldi	r24, 0x03	; 3
 196:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 19a:	16 c0       	rjmp	.+44     	; 0x1c8 <button_Tick+0x11a>
				state = wait2;
			}
			break;
			
	}
	switch(state){ // State actions
 19c:	82 30       	cpi	r24, 0x02	; 2
 19e:	61 f0       	breq	.+24     	; 0x1b8 <button_Tick+0x10a>
 1a0:	83 30       	cpi	r24, 0x03	; 3
 1a2:	91 f0       	breq	.+36     	; 0x1c8 <button_Tick+0x11a>
 1a4:	81 30       	cpi	r24, 0x01	; 1
 1a6:	91 f4       	brne	.+36     	; 0x1cc <button_Tick+0x11e>
		case init:
			break;
		case inc:
			if(tmpC < 9){
 1a8:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <tmpC>
 1ac:	89 30       	cpi	r24, 0x09	; 9
 1ae:	70 f4       	brcc	.+28     	; 0x1cc <button_Tick+0x11e>
				tmpC = tmpC + 1;
 1b0:	8f 5f       	subi	r24, 0xFF	; 255
 1b2:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <tmpC>
 1b6:	08 95       	ret
			}
			break;
		case dec:
			if(tmpC > 0){
 1b8:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <tmpC>
 1bc:	88 23       	and	r24, r24
 1be:	31 f0       	breq	.+12     	; 0x1cc <button_Tick+0x11e>
				tmpC = tmpC - 1;
 1c0:	81 50       	subi	r24, 0x01	; 1
 1c2:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <tmpC>
 1c6:	08 95       	ret
			}
			break;
		case zero:
			tmpC = 0;
 1c8:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <tmpC>
 1cc:	08 95       	ret

000001ce <main>:
	}			
}

int main(void)
{
	DDRA = 0x00; PORTA = 0xFF; // Configure port A's 8 pins as inputs
 1ce:	11 b8       	out	0x01, r1	; 1
 1d0:	8f ef       	ldi	r24, 0xFF	; 255
 1d2:	82 b9       	out	0x02, r24	; 2
	DDRC = 0xFF; PORTC = 0x00; // Configure port C's 8 pins as outputs
 1d4:	87 b9       	out	0x07, r24	; 7
 1d6:	18 b8       	out	0x08, r1	; 8
										// initialize to 0s
																				
	state = init;
 1d8:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
	tmpC = 0x07;
 1dc:	87 e0       	ldi	r24, 0x07	; 7
 1de:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <tmpC>

	while (1) 
    {		
		button_Tick();
		PORTC = tmpC;
 1e2:	65 df       	rcall	.-310    	; 0xae <button_Tick>
 1e4:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <tmpC>
 1e8:	88 b9       	out	0x08, r24	; 8
 1ea:	fb cf       	rjmp	.-10     	; 0x1e2 <main+0x14>

000001ec <_exit>:
 1ec:	f8 94       	cli

000001ee <__stop_program>:
 1ee:	ff cf       	rjmp	.-2      	; 0x1ee <__stop_program>
